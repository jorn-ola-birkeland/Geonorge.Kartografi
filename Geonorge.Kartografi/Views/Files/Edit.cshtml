@using Geonorge.Kartografi.Resources
@model Geonorge.Kartografi.Models.CartographyFile

@{
    ViewBag.Title = "Rediger";
}
@section breadcrumb {
    <li><a href="~/tegneregler/">Digital kartografi</a></li>
    <li><a href="~/tegneregler/Details/@Model.SystemId">@Model.Name</a></li>
    <li>Rediger</li>
}

<h2>Rediger @Model.Name</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "cartographyform" }))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SystemId)
    @Html.HiddenFor(model => model.FileName)
    @Html.HiddenFor(model => model.PreviewImage)
    @Html.HiddenFor(model => model.versioningId)
    @Html.HiddenFor(model => model.VersionId)

    <input type="hidden" id="newversion" name="newversion" value="@(ViewBag.newversion ? "true" : "false")" />
    @if (ViewBag.IsAdmin)
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-md-12">
                        <span class="required">Eier av kartografi</span>
                    </div>
                </div>
            </div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <select class="ownerOrganizationSelect form-control" id="Owner" name="Owner">
                            <option value="@Model.Owner" selected="selected">@Model.Owner</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-12">
                    <span class="required">Informasjon om kartografi-filen</span>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (ViewBag.newversion)
            {
            <div class="form-group">
                @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <span>@Model.FileName</span> <input required type="file" id="uploadFile" name="uploadFile" style="display:inline;" />
                </div>
            </div>
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span>@Model.FileName</span>
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.Compatibility, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBox("compatibilities", (MultiSelectList)ViewBag.compatibilitiesList, new { @class = "form-control compatibilitySelect", multiple = "multiple" })
                    @Html.ValidationMessageFor(model => model.Compatibility, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PreviewImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <span>@Model.PreviewImage</span> <input type="file" id="uploadPreviewImage" name="uploadPreviewImage" accept="image/*" style="display:inline;" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    <p class="help-text bg-success" id="help-text-description" style="display: none">
                        @UI.HelpDescription
                    </p>
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control2", cols = "", rows = "2", style = "min-height: 0;" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1">
                    <p class="form-control-static">
                        <a href="#" data-help-text-id="help-text-description" class="badge help-text-toggle">?</a>
                    </p>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Use, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    <p class="help-text bg-success" id="help-text-use" style="display: none">
                        @UI.HelpUse
                    </p>
                    @Html.TextAreaFor(model => model.Use, new { @class = "form-control", cols = "", rows = "2", style = "min-height: 0;" })
                    @Html.ValidationMessageFor(model => model.Use, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1">
                    <p class="form-control-static">
                        <a href="#" data-help-text-id="help-text-use" class="badge help-text-toggle">?</a>
                    </p>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Properties, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    <p class="help-text bg-success" id="help-text-properties" style="display: none">
                        @UI.HelpProperties
                    </p>
                    @Html.TextAreaFor(model => model.Properties, new { @class = "form-control", cols = "", rows = "2", style = "min-height: 0;" })
                    @Html.ValidationMessageFor(model => model.Properties, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1">
                    <p class="form-control-static">
                        <a href="#" data-help-text-id="help-text-properties" class="badge help-text-toggle">?</a>
                    </p>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OfficialStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    <p class="help-text bg-success" id="help-text-officialstatus" style="display: none">
                        @UI.HelpOfficialStatus
                    </p>
                @if (ViewBag.newversion)
                {
                    <input type="radio" name="OfficialStatus" value="True" @(Model.OfficialStatus ? "checked='checked'" : "")  /> <span>Ja</span>
                    <input type="radio" name="OfficialStatus" value="False" @(!Model.OfficialStatus ? "checked='checked'" : "") /> <span>Nei</span>
                }
                else
                {
                    if (Model.OfficialStatus)
                    {
                        <span>Ja</span>
                    }
                    else
                    {
                        <span>Nei</span>
                    }
                }
                </div>
                <div class="col-md-1">
                    <p class="form-control-static">
                        <a href="#" data-help-text-id="help-text-officialstatus" class="badge help-text-toggle">?</a>
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-12">
                    <span class="required">Knytning til datasett og tjeneste</span>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(model => model.DatasetUuid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (!string.IsNullOrEmpty(Model.DatasetUuid))
                    {
                        @Html.HiddenFor(m => m.DatasetUuid)
                        <select class="datasetUuidSelect form-control" id="DatasetUuid" name="DatasetUuid" disabled="disabled"></select>
                    }
                    else
                    {
                        <select class="datasetUuidSelect form-control" id="DatasetUuid" name="DatasetUuid"></select>
                    }
                    @Html.ValidationMessageFor(model => model.DatasetUuid, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.DatasetName)
                    @Html.HiddenFor(model => model.OwnerDataset)
                    @Html.HiddenFor(model => model.Theme)
                    @Html.ValidationMessageFor(model => model.DatasetName, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Theme, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ServiceUuid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="serviceUuidSelect form-control" id="ServiceUuid" name="ServiceUuid"></select>
                    @Html.ValidationMessageFor(model => model.ServiceUuid, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ServiceName)
                    @Html.ValidationMessageFor(model => model.ServiceName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-12">
                    <span>Dokumentgodkjenning</span>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Status", ViewBag.Statuses as SelectList, String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="DateAcceptedDiv" class="form-group">
                @Html.LabelFor(model => model.DateAccepted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateAccepted, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateAccepted, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="AcceptedCommentDiv" class="form-group">
                @Html.LabelFor(model => model.AcceptedComment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AcceptedComment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AcceptedComment, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 hidden-print">
        <a class="hidden-print show-loading-animation pull-left" data-loading-message="Henter innhold" href="~/tegneregler/Details/@Model.SystemId">Tilbake</a>
        <input type="submit" value="Lagre" style="margin-left: 15px;" class="btn btn-default pull-right" />
        @if (!(Model.OfficialStatus && Model.Status == "Accepted") && !ViewBag.newversion)
        {
            <a class="btn btn-default btn-space pull-right" style="margin-left: 15px;" href="~/tegneregler/Delete/@Model.SystemId">Slett</a>
        }

    </div>
</div>
}
<script type="text/javascript" src="~/Scripts/custom.js"></script>
@if (!ViewBag.IsAdmin)
{
<script type="text/javascript">
    $(document).ready(function () {
        if ($('#Status option:selected').val() == "Accepted" && $('#newversion').val() == "false")
            $("#cartographyform :input").prop("disabled", true);
    });
</script>
}

@if (!string.IsNullOrEmpty(Model.DatasetUuid))
{
    <script type="text/javascript">
    $(document).ready(function () {
        metadata = [];
        option = {}
        option["id"] = "@Model.DatasetUuid";
        option["text"] = "@Model.DatasetName";
        option["theme"] = "@Model.Theme";
        option["ownerorganization"] = "@Html.Raw(Model.OwnerDataset)";

        metadata.push(option);

        var data = [{ id: "@Model.DatasetUuid", text: '@Model.DatasetName' }];

        $(".datasetUuidSelect").select2({
            data: data
        })

        $(".datasetUuidSelect").trigger("select2:select");

        $(".serviceUuidSelect").select2({
            data: [{ id: "@Model.ServiceUuid", text: '@Model.ServiceName' }]
        })

        $(".serviceUuidSelect").trigger("select2:select");


    });
    </script>
}